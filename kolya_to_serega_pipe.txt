## version 1


## снейк всегда хватет только первое правило
rule all:
    input:
        blastp_outfile = "/media/eternus1/nfs/projects/shared/transcriptome_pipeline/data/blast/blastp.outfmt6"  # если этот файл не существует, будет искать по остальным правилам


# смотрит тут, но здесь этот файл не будет создан

rule transdecoder_LongOrfs:
    input:
        transdecoder_in = "./data/td_input.fasta"
    conda:
        "./envs/transdecoder.yaml"
    output:
        pep_file = "/mnt/projects/output/blala.pep",
        kek_file = "/mnt/projects/output/blala.kek"
    params:
        transdecoder_outdir = directory("./output/")
    shell:
        """
           TransDecoder.LongOrfs -t {input.transdecoder_in} --output_dir {params.dir}
        """

# смотрит тут, здесь он создается, но нужен оутпут от другого правила
# он сначала запускает правило transdecoder_LongOrfs а потом blastp

rule blastp:
    input:
        pep_file = rule.transdecoder_LongOrfs.output.pep_file  # (== "/mnt/projects/output/blala.pep")
    conda:
        "/home/sryaxovsky/transcriptomics_pipeline/envs/blastp.yaml"
    output:
        blastp_outfile = "/media/eternus1/nfs/projects/shared/transcriptome_pipeline/data/blast/blastp.outfmt6"
    threads: 32
    params:
        db = "/mnt/data/ncbi/blast/uniref90/uniref90"
    shell:
       """ blastp -query {input} -db {params.db} -max_target_seqs 1 -outfmt 6 -evalue 1e-5 -num_threads {threads} -out {output} """  

############################### version 2 #####################################

configfile: "/path/to/configfile.yaml"

rule all:
    input:
        blastp_outfile = config["blastp_output"]  # если этот файл не существует, будет искать по остальным правилам

rule transdecoder_LongOrfs:
    input:
        transdecoder_in = config["transdecoder_input"]
    conda:
        "./envs/transdecoder.yaml"
    output:
        pep_file = config["transdecoder_pep"],
        kek_file = config["transdecoder_kek"]
    params:
        transdecoder_outdir = directory(config["transdecoder_dir"])
    shell:
        """
           TransDecoder.LongOrfs -t {input.transdecoder_in} --output_dir {params.dir}
        """

rule blastp:
    input:
        pep_file = rule.transdecoder_LongOrfs.output.pep_file
    conda:
        "/home/sryaxovsky/transcriptomics_pipeline/envs/blastp.yaml"
    output:
        blastp_outfile = config["blastp_output"]
    threads: 32
    params:
        blastp_db = config["blastp_db"]
    shell:
       """ blastp -query {input} -db {params.db} -max_target_seqs 1 -outfmt 6 -evalue 1e-5 -num_threads {threads} -out {output} """  
